import fs from "fs"

function toCamelCase(str) {
  return str.replace(/-([a-z])/g, (match, p1) => p1.toUpperCase()).replace(/-/g, "")
}

function toHyphenatedCase(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
}

const readyToChangeStr = `

`

const arr = readyToChangeStr.split("@@").filter(Boolean).map(i => {
  let [name, content] = i.split("\t")
  name = toCamelCase(name)
  return [name.trim(), content.trim().replace(/\n/g, "")]
})
for (const [name, content] of arr) {
  console.log(`  ${name}: () => css\`${content}\`,`)
}

// ---------------
const utility = {
  /** @Layout */
  aspectAuto: () => "aspect-ratio: auto;",
  aspectSquare: () => "aspect-ratio: 1 / 1;",
  aspectVideo: () => "aspect-ratio: 16 / 9;",
  boxBorder: () => "box-sizing: border-box;",
  boxContent: () => "box-sizing: content-box;",
  block: () => "display: block;",
  inlineBlock: () => "display: inline-block;",
  inline: () => "display: inline;",
  flex_: () => "display: flex;",
  inlineFlex: () => "display: inline-flex;",
  table: () => "display: table;",
  inlineTable: () => "display: inline-table;",
  tableCaption: () => "display: table-caption;",
  tableCell: () => "display: table-cell;",
  tableColumn: () => "display: table-column;",
  tableColumnGroup: () => "display: table-column-group;",
  tableFooterGroup: () => "display: table-footer-group;",
  tableHeaderGroup: () => "display: table-header-group;",
  tableRowGroup: () => "display: table-row-group;",
  tableRow: () => "display: table-row;",
  flowRoot: () => "display: flow-root;",
  grid_: () => "display: grid;",
  inlineGrid: () => "display: inline-grid;",
  contents: () => "display: contents;",
  listItem: () => "display: list-item;",
  hidden: () => "display: none;",
  isolate: () => "isolation: isolate;",
  isolationAuto: () => "isolation: auto;",
  objectContain: () => "object-fit: contain;",
  objectCover: () => "object-fit: cover;",
  objectFill: () => "object-fit: fill;",
  objectNone: () => "object-fit: none;",
  objectScaleDown: () => "object-fit: scale-down;",
  objectBottom: () => "object-position: bottom;",
  objectCenter: () => "object-position: center;",
  objectLeft: () => "object-position: left;",
  objectLeftBottom: () => "object-position: left bottom;",
  objectLeftTop: () => "object-position: left top;",
  objectRight: () => "object-position: right;",
  objectRightBottom: () => "object-position: right bottom;",
  objectRightTop: () => "object-position: right top;",
  objectTop: () => "object-position: top;",
  overflowAuto: () => "overflow: auto;",
  overflowHidden: () => "overflow: hidden;",
  overflowClip: () => "overflow: clip;",
  overflowVisible: () => "overflow: visible;",
  overflowScroll: () => "overflow: scroll;",
  overflowXAuto: () => "overflow-x: auto;",
  overflowYAuto: () => "overflow-y: auto;",
  overflowXHidden: () => "overflow-x: hidden;",
  overflowYHidden: () => "overflow-y: hidden;",
  overflowXClip: () => "overflow-x: clip;",
  overflowYClip: () => "overflow-y: clip;",
  overflowXVisible: () => "overflow-x: visible;",
  overflowYVisible: () => "overflow-y: visible;",
  overflowXScroll: () => "overflow-x: scroll;",
  overflowYScroll: () => "overflow-y: scroll;",
  overscrollAuto: () => "overscroll-behavior: auto;",
  overscrollContain: () => "overscroll-behavior: contain;",
  overscrollNone: () => "overscroll-behavior: none;",
  overscrollYAuto: () => "overscroll-behavior-y: auto;",
  overscrollYContain: () => "overscroll-behavior-y: contain;",
  overscrollYNone: () => "overscroll-behavior-y: none;",
  overscrollXAuto: () => "overscroll-behavior-x: auto;",
  overscrollXContain: () => "overscroll-behavior-x: contain;",
  overscrollXNone: () => "overscroll-behavior-x: none;",
  static_: () => "position: static;",
  fixed: () => "position: fixed;",
  absolute: () => "position: absolute;",
  relative: () => "position: relative;",
  sticky: () => "position: sticky;",
  visible: () => "visibility: visible;",
  invisible: () => "visibility: hidden;",
  collapse: () => "visibility: collapse;",
  zAuto: () => "z-index: auto;",
  /** @Flexbox_Grid */
  flexRow: () => "flex-direction: row;",
  flexRowReverse: () => "flex-direction: row-reverse;",
  flexCol: () => "flex-direction: column;",
  flexColReverse: () => "flex-direction: column-reverse;",
  flexWrap_: () => "flex-wrap: wrap;",
  flexWrapReverse: () => "flex-wrap: wrap-reverse;",
  flexNowrap: () => "flex-wrap: nowrap;",
  flex1: () => "flex: 1 1 0%;",
  flexAuto: () => "flex: 1 1 auto;",
  flexInitial: () => "flex: 0 1 auto;",
  flexNone: () => "flex: none;",
  grow: () => "flex-grow: 1;",
  grow0: () => "flex-grow: 0;",
  shrink: () => "flex-shrink: 1;",
  shrink0: () => "flex-shrink: 0;",
  gridCols1: () => "grid-template-columns: repeat(1, minmax(0, 1fr));",
  gridCols2: () => "grid-template-columns: repeat(2, minmax(0, 1fr));",
  gridCols3: () => "grid-template-columns: repeat(3, minmax(0, 1fr));",
  gridCols4: () => "grid-template-columns: repeat(4, minmax(0, 1fr));",
  gridCols5: () => "grid-template-columns: repeat(5, minmax(0, 1fr));",
  gridCols6: () => "grid-template-columns: repeat(6, minmax(0, 1fr));",
  gridCols7: () => "grid-template-columns: repeat(7, minmax(0, 1fr));",
  gridCols8: () => "grid-template-columns: repeat(8, minmax(0, 1fr));",
  gridCols9: () => "grid-template-columns: repeat(9, minmax(0, 1fr));",
  gridCols10: () => "grid-template-columns: repeat(10, minmax(0, 1fr));",
  gridCols11: () => "grid-template-columns: repeat(11, minmax(0, 1fr));",
  gridCols12: () => "grid-template-columns: repeat(12, minmax(0, 1fr));",
  gridColsNone: () => "grid-template-columns: none;",
  colAuto: () => "grid-column: auto;",
  colSpan1: () => "grid-column: span 1 / span 1;",
  colSpan2: () => "grid-column: span 2 / span 2;",
  colSpan3: () => "grid-column: span 3 / span 3;",
  colSpan4: () => "grid-column: span 4 / span 4;",
  colSpan5: () => "grid-column: span 5 / span 5;",
  colSpan6: () => "grid-column: span 6 / span 6;",
  colSpan7: () => "grid-column: span 7 / span 7;",
  colSpan8: () => "grid-column: span 8 / span 8;",
  colSpan9: () => "grid-column: span 9 / span 9;",
  colSpan10: () => "grid-column: span 10 / span 10;",
  colSpan11: () => "grid-column: span 11 / span 11;",
  colSpan12: () => "grid-column: span 12 / span 12;",
  colSpanFull: () => "grid-column: 1 / -1;",
  colStart1: () => "grid-column-start: 1;",
  colStart2: () => "grid-column-start: 2;",
  colStart3: () => "grid-column-start: 3;",
  colStart4: () => "grid-column-start: 4;",
  colStart5: () => "grid-column-start: 5;",
  colStart6: () => "grid-column-start: 6;",
  colStart7: () => "grid-column-start: 7;",
  colStart8: () => "grid-column-start: 8;",
  colStart9: () => "grid-column-start: 9;",
  colStart10: () => "grid-column-start: 10;",
  colStart11: () => "grid-column-start: 11;",
  colStart12: () => "grid-column-start: 12;",
  colStart13: () => "grid-column-start: 13;",
  colStartAuto: () => "grid-column-start: auto;",
  colEnd1: () => "grid-column-end: 1;",
  colEnd2: () => "grid-column-end: 2;",
  colEnd3: () => "grid-column-end: 3;",
  colEnd4: () => "grid-column-end: 4;",
  colEnd5: () => "grid-column-end: 5;",
  colEnd6: () => "grid-column-end: 6;",
  colEnd7: () => "grid-column-end: 7;",
  colEnd8: () => "grid-column-end: 8;",
  colEnd9: () => "grid-column-end: 9;",
  colEnd10: () => "grid-column-end: 10;",
  colEnd11: () => "grid-column-end: 11;",
  colEnd12: () => "grid-column-end: 12;",
  colEnd13: () => "grid-column-end: 13;",
  colEndAuto: () => "grid-column-end: auto;",
  gridRows1: () => "grid-template-rows: repeat(1, minmax(0, 1fr));",
  gridRows2: () => "grid-template-rows: repeat(2, minmax(0, 1fr));",
  gridRows3: () => "grid-template-rows: repeat(3, minmax(0, 1fr));",
  gridRows4: () => "grid-template-rows: repeat(4, minmax(0, 1fr));",
  gridRows5: () => "grid-template-rows: repeat(5, minmax(0, 1fr));",
  gridRows6: () => "grid-template-rows: repeat(6, minmax(0, 1fr));",
  gridRowsNone: () => "grid-template-rows: none;",
  gridFlowRow: () => "grid-auto-flow: row;",
  gridFlowCol: () => "grid-auto-flow: column;",
  gridFlowDense: () => "grid-auto-flow: dense;",
  gridFlowRowDense: () => "grid-auto-flow: row dense;",
  gridFlowColDense: () => "grid-auto-flow: column dense;",
  autoColsAuto: () => "grid-auto-columns: auto;",
  autoColsMin: () => "grid-auto-columns: min-content;",
  autoColsMax: () => "grid-auto-columns: max-content;",
  autoColsFr: () => "grid-auto-columns: minmax(0, 1fr);",
  autoRowsAuto: () => "grid-auto-rows: auto;",
  autoRowsMin: () => "grid-auto-rows: min-content;",
  autoRowsMax: () => "grid-auto-rows: max-content;",
  autoRowsFr: () => "grid-auto-rows: minmax(0, 1fr);",
  justifyNormal: () => "justify-content: normal;",
  justifyStart: () => "justify-content: flex-start;",
  justifyEnd: () => "justify-content: flex-end;",
  justifyCenter: () => "justify-content: center;",
  justifyBetween: () => "justify-content: space-between;",
  justifyAround: () => "justify-content: space-around;",
  justifyEvenly: () => "justify-content: space-evenly;",
  justifyStretch: () => "justify-content: stretch;",
  justifyItemsStart: () => "justify-items: start;",
  justifyItemsEnd: () => "justify-items: end;",
  justifyItemsCenter: () => "justify-items: center;",
  justifyItemsStretch: () => "justify-items: stretch;",
  justifySelfAuto: () => "justify-self: auto;",
  justifySelfStart: () => "justify-self: start;",
  justifySelfEnd: () => "justify-self: end;",
  justifySelfCenter: () => "justify-self: center;",
  justifySelfStretch: () => "justify-self: stretch;",
  contentNormal: () => "align-content: normal;",
  contentCenter: () => "align-content: center;",
  contentStart: () => "align-content: flex-start;",
  contentEnd: () => "align-content: flex-end;",
  contentBetween: () => "align-content: space-between;",
  contentAround: () => "align-content: space-around;",
  contentEvenly: () => "align-content: space-evenly;",
  contentBaseline: () => "align-content: baseline;",
  contentStretch: () => "align-content: stretch;",
  itemsStart: () => "align-items: flex-start;",
  itemsEnd: () => "align-items: flex-end;",
  itemsCenter: () => "align-items: center;",
  itemsBaseline: () => "align-items: baseline;",
  itemsStretch: () => "align-items: stretch;",
  selfAuto: () => "align-self: auto;",
  selfStart: () => "align-self: flex-start;",
  selfEnd: () => "align-self: flex-end;",
  selfCenter: () => "align-self: center;",
  selfStretch: () => "align-self: stretch;",
  selfBaseline: () => "align-self: baseline;",
  placeContentCenter: () => "place-content: center;",
  placeContentStart: () => "place-content: start;",
  placeContentEnd: () => "place-content: end;",
  placeContentBetween: () => "place-content: space-between;",
  placeContentAround: () => "place-content: space-around;",
  placeContentEvenly: () => "place-content: space-evenly;",
  placeContentBaseline: () => "place-content: baseline;",
  placeContentStretch: () => "place-content: stretch;",
  placeItemsStart: () => "place-items: start;",
  placeItemsEnd: () => "place-items: end;",
  placeItemsCenter: () => "place-items: center;",
  placeItemsBaseline: () => "place-items: baseline;",
  placeItemsStretch: () => "place-items: stretch;",
  placeSelfAuto: () => "place-self: auto;",
  placeSelfStart: () => "place-self: start;",
  placeSelfEnd: () => "place-self: end;",
  placeSelfCenter: () => "place-self: center;",
  placeSelfStretch: () => "place-self: stretch;",
  /** @Typography */
  fontSans: () => "font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";",
  fontSerif: () => "font-family: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;",
  fontMono: () => "font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;",
  textXs: () => "font-size: 0.75rem; line-height: 1rem; ",
  textSm: () => "font-size: 0.875rem; line-height: 1.25rem; ",
  textBase: () => "font-size: 1rem; line-height: 1.5rem; ",
  textLg: () => "font-size: 1.125rem; line-height: 1.75rem; ",
  textXl: () => "font-size: 1.25rem; line-height: 1.75rem; ",
  text2xl: () => "font-size: 1.5rem; line-height: 2rem; ",
  text3xl: () => "font-size: 1.875rem; line-height: 2.25rem; ",
  text4xl: () => "font-size: 2.25rem; line-height: 2.5rem; ",
  text5xl: () => "font-size: 3rem; line-height: 1;",
  text6xl: () => "font-size: 3.75rem; line-height: 1;",
  text7xl: () => "font-size: 4.5rem; line-height: 1;",
  text8xl: () => "font-size: 6rem; line-height: 1;",
  text9xl: () => "font-size: 8rem; line-height: 1;",
  antialiased: () => "-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;",
  subpixelAntialiased: () => "-webkit-font-smoothing: auto;-moz-osx-font-smoothing: auto;",
  italic: () => "font-style: italic;",
  notItalic: () => "font-style: normal;",
  fontThin: () => "font-weight: 100;",
  fontExtralight: () => "font-weight: 200;",
  fontLight: () => "font-weight: 300;",
  fontNormal: () => "font-weight: 400;",
  fontMedium: () => "font-weight: 500;",
  fontSemibold: () => "font-weight: 600;",
  fontBold: () => "font-weight: 700;",
  fontExtrabold: () => "font-weight: 800;",
  fontBlack: () => "font-weight: 900;",
  normalNums: () => "font-variant-numeric: normal;",
  ordinal: () => "font-variant-numeric: ordinal;",
  slashedZero: () => "font-variant-numeric: slashed-zero;",
  liningNums: () => "font-variant-numeric: lining-nums;",
  oldstyleNums: () => "font-variant-numeric: oldstyle-nums;",
  proportionalNums: () => "font-variant-numeric: proportional-nums;",
  tabularNums: () => "font-variant-numeric: tabular-nums;",
  diagonalFractions: () => "font-variant-numeric: diagonal-fractions;",
  stackedFractions: () => "font-variant-numeric: stacked-fractions;",
  trackingTighter: () => "letter-spacing: -0.05em;",
  trackingTight: () => "letter-spacing: -0.025em;",
  trackingNormal: () => "letter-spacing: 0em;",
  trackingWide: () => "letter-spacing: 0.025em;",
  trackingWider: () => "letter-spacing: 0.05em;",
  trackingWidest: () => "letter-spacing: 0.1em;",
  lineClamp1: () => "overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 1;",
  lineClamp2: () => "overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 2;",
  lineClamp3: () => "overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 3;",
  lineClamp4: () => "overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 4;",
  lineClamp5: () => "overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 5;",
  lineClamp6: () => "overflow: hidden;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 6;",
  lineClampNone: () => "overflow: visible;display: block;-webkit-box-orient: horizontal;-webkit-line-clamp: none;",
  leadingNone: () => "line-height: 1;",
  leadingTight: () => "line-height: 1.25;",
  leadingSnug: () => "line-height: 1.375;",
  leadingNormal: () => "line-height: 1.5;",
  leadingRelaxed: () => "line-height: 1.625;",
  leadingLoose: () => "line-height: 2;",
  listInside: () => "list-style-position: inside;",
  listOutside: () => "list-style-position: outside;",
  listNone: () => "list-style-type: none;",
  listDisc: () => "list-style-type: disc;",
  listDecimal: () => "list-style-type: decimal;",
  textLeft: () => "text-align: left;",
  textCenter: () => "text-align: center;",
  textRight: () => "text-align: right;",
  textJustify_: () => "text-align: justify;",
  textStart: () => "text-align: start;",
  textEnd: () => "text-align: end;",
  textInherit: () => "color: inherit;",
  textCurrent: () => "color: currentColor;",
  textTransparent: () => "color: transparent;",
  textBlack: () => "color: rgb(0 0 0);",
  textWhite: () => "color: rgb(255 255 255);",
  textSlate50: () => "color: rgb(248 250 252);",
  textSlate100: () => "color: rgb(241 245 249);",
  textSlate200: () => "color: rgb(226 232 240);",
  textSlate300: () => "color: rgb(203 213 225);",
  textSlate400: () => "color: rgb(148 163 184);",
  textSlate500: () => "color: rgb(100 116 139);",
  textSlate600: () => "color: rgb(71 85 105);",
  textSlate700: () => "color: rgb(51 65 85);",
  textSlate800: () => "color: rgb(30 41 59);",
  textSlate900: () => "color: rgb(15 23 42);",
  textSlate950: () => "color: rgb(2 6 23);",
  textGray50: () => "color: rgb(249 250 251);",
  textGray100: () => "color: rgb(243 244 246);",
  textGray200: () => "color: rgb(229 231 235);",
  textGray300: () => "color: rgb(209 213 219);",
  textGray400: () => "color: rgb(156 163 175);",
  textGray500: () => "color: rgb(107 114 128);",
  textGray600: () => "color: rgb(75 85 99);",
  textGray700: () => "color: rgb(55 65 81);",
  textGray800: () => "color: rgb(31 41 55);",
  textGray900: () => "color: rgb(17 24 39);",
  textGray950: () => "color: rgb(3 7 18);",
  textZinc50: () => "color: rgb(250 250 250);",
  textZinc100: () => "color: rgb(244 244 245);",
  textZinc200: () => "color: rgb(228 228 231);",
  textZinc300: () => "color: rgb(212 212 216);",
  textZinc400: () => "color: rgb(161 161 170);",
  textZinc500: () => "color: rgb(113 113 122);",
  textZinc600: () => "color: rgb(82 82 91);",
  textZinc700: () => "color: rgb(63 63 70);",
  textZinc800: () => "color: rgb(39 39 42);",
  textZinc900: () => "color: rgb(24 24 27);",
  textZinc950: () => "color: rgb(9 9 11);",
  textNeutral50: () => "color: rgb(250 250 250);",
  textNeutral100: () => "color: rgb(245 245 245);",
  textNeutral200: () => "color: rgb(229 229 229);",
  textNeutral300: () => "color: rgb(212 212 212);",
  textNeutral400: () => "color: rgb(163 163 163);",
  textNeutral500: () => "color: rgb(115 115 115);",
  textNeutral600: () => "color: rgb(82 82 82);",
  textNeutral700: () => "color: rgb(64 64 64);",
  textNeutral800: () => "color: rgb(38 38 38);",
  textNeutral900: () => "color: rgb(23 23 23);",
  textNeutral950: () => "color: rgb(10 10 10);",
  textStone50: () => "color: rgb(250 250 249);",
  textStone100: () => "color: rgb(245 245 244);",
  textStone200: () => "color: rgb(231 229 228);",
  textStone300: () => "color: rgb(214 211 209);",
  textStone400: () => "color: rgb(168 162 158);",
  textStone500: () => "color: rgb(120 113 108);",
  textStone600: () => "color: rgb(87 83 78);",
  textStone700: () => "color: rgb(68 64 60);",
  textStone800: () => "color: rgb(41 37 36);",
  textStone900: () => "color: rgb(28 25 23);",
  textStone950: () => "color: rgb(12 10 9);",
  textRed50: () => "color: rgb(254 242 242);",
  textRed100: () => "color: rgb(254 226 226);",
  textRed200: () => "color: rgb(254 202 202);",
  textRed300: () => "color: rgb(252 165 165);",
  textRed400: () => "color: rgb(248 113 113);",
  textRed500: () => "color: rgb(239 68 68);",
  textRed600: () => "color: rgb(220 38 38);",
  textRed700: () => "color: rgb(185 28 28);",
  textRed800: () => "color: rgb(153 27 27);",
  textRed900: () => "color: rgb(127 29 29);",
  textRed950: () => "color: rgb(69 10 10);",
  textOrange50: () => "color: rgb(255 247 237);",
  textOrange100: () => "color: rgb(255 237 213);",
  textOrange200: () => "color: rgb(254 215 170);",
  textOrange300: () => "color: rgb(253 186 116);",
  textOrange400: () => "color: rgb(251 146 60);",
  textOrange500: () => "color: rgb(249 115 22);",
  textOrange600: () => "color: rgb(234 88 12);",
  textOrange700: () => "color: rgb(194 65 12);",
  textOrange800: () => "color: rgb(154 52 18);",
  textOrange900: () => "color: rgb(124 45 18);",
  textOrange950: () => "color: rgb(67 20 7);",
  textAmber50: () => "color: rgb(255 251 235);",
  textAmber100: () => "color: rgb(254 243 199);",
  textAmber200: () => "color: rgb(253 230 138);",
  textAmber300: () => "color: rgb(252 211 77);",
  textAmber400: () => "color: rgb(251 191 36);",
  textAmber500: () => "color: rgb(245 158 11);",
  textAmber600: () => "color: rgb(217 119 6);",
  textAmber700: () => "color: rgb(180 83 9);",
  textAmber800: () => "color: rgb(146 64 14);",
  textAmber900: () => "color: rgb(120 53 15);",
  textAmber950: () => "color: rgb(69 26 3);",
  textYellow50: () => "color: rgb(254 252 232);",
  textYellow100: () => "color: rgb(254 249 195);",
  textYellow200: () => "color: rgb(254 240 138);",
  textYellow300: () => "color: rgb(253 224 71);",
  textYellow400: () => "color: rgb(250 204 21);",
  textYellow500: () => "color: rgb(234 179 8);",
  textYellow600: () => "color: rgb(202 138 4);",
  textYellow700: () => "color: rgb(161 98 7);",
  textYellow800: () => "color: rgb(133 77 14);",
  textYellow900: () => "color: rgb(113 63 18);",
  textYellow950: () => "color: rgb(66 32 6);",
  textLime50: () => "color: rgb(247 254 231);",
  textLime100: () => "color: rgb(236 252 203);",
  textLime200: () => "color: rgb(217 249 157);",
  textLime300: () => "color: rgb(190 242 100);",
  textLime400: () => "color: rgb(163 230 53);",
  textLime500: () => "color: rgb(132 204 22);",
  textLime600: () => "color: rgb(101 163 13);",
  textLime700: () => "color: rgb(77 124 15);",
  textLime800: () => "color: rgb(63 98 18);",
  textLime900: () => "color: rgb(54 83 20);",
  textLime950: () => "color: rgb(26 46 5);",
  textGreen50: () => "color: rgb(240 253 244);",
  textGreen100: () => "color: rgb(220 252 231);",
  textGreen200: () => "color: rgb(187 247 208);",
  textGreen300: () => "color: rgb(134 239 172);",
  textGreen400: () => "color: rgb(74 222 128);",
  textGreen500: () => "color: rgb(34 197 94);",
  textGreen600: () => "color: rgb(22 163 74);",
  textGreen700: () => "color: rgb(21 128 61);",
  textGreen800: () => "color: rgb(22 101 52);",
  textGreen900: () => "color: rgb(20 83 45);",
  textGreen950: () => "color: rgb(5 46 22);",
  textEmerald50: () => "color: rgb(236 253 245);",
  textEmerald100: () => "color: rgb(209 250 229);",
  textEmerald200: () => "color: rgb(167 243 208);",
  textEmerald300: () => "color: rgb(110 231 183);",
  textEmerald400: () => "color: rgb(52 211 153);",
  textEmerald500: () => "color: rgb(16 185 129);",
  textEmerald600: () => "color: rgb(5 150 105);",
  textEmerald700: () => "color: rgb(4 120 87);",
  textEmerald800: () => "color: rgb(6 95 70);",
  textEmerald900: () => "color: rgb(6 78 59);",
  textEmerald950: () => "color: rgb(2 44 34);",
  textTeal50: () => "color: rgb(240 253 250);",
  textTeal100: () => "color: rgb(204 251 241);",
  textTeal200: () => "color: rgb(153 246 228);",
  textTeal300: () => "color: rgb(94 234 212);",
  textTeal400: () => "color: rgb(45 212 191);",
  textTeal500: () => "color: rgb(20 184 166);",
  textTeal600: () => "color: rgb(13 148 136);",
  textTeal700: () => "color: rgb(15 118 110);",
  textTeal800: () => "color: rgb(17 94 89);",
  textTeal900: () => "color: rgb(19 78 74);",
  textTeal950: () => "color: rgb(4 47 46);",
  textCyan50: () => "color: rgb(236 254 255);",
  textCyan100: () => "color: rgb(207 250 254);",
  textCyan200: () => "color: rgb(165 243 252);",
  textCyan300: () => "color: rgb(103 232 249);",
  textCyan400: () => "color: rgb(34 211 238);",
  textCyan500: () => "color: rgb(6 182 212);",
  textCyan600: () => "color: rgb(8 145 178);",
  textCyan700: () => "color: rgb(14 116 144);",
  textCyan800: () => "color: rgb(21 94 117);",
  textCyan900: () => "color: rgb(22 78 99);",
  textCyan950: () => "color: rgb(8 51 68);",
  textSky50: () => "color: rgb(240 249 255);",
  textSky100: () => "color: rgb(224 242 254);",
  textSky200: () => "color: rgb(186 230 253);",
  textSky300: () => "color: rgb(125 211 252);",
  textSky400: () => "color: rgb(56 189 248);",
  textSky500: () => "color: rgb(14 165 233);",
  textSky600: () => "color: rgb(2 132 199);",
  textSky700: () => "color: rgb(3 105 161);",
  textSky800: () => "color: rgb(7 89 133);",
  textSky900: () => "color: rgb(12 74 110);",
  textSky950: () => "color: rgb(8 47 73);",
  textBlue50: () => "color: rgb(239 246 255);",
  textBlue100: () => "color: rgb(219 234 254);",
  textBlue200: () => "color: rgb(191 219 254);",
  textBlue300: () => "color: rgb(147 197 253);",
  textBlue400: () => "color: rgb(96 165 250);",
  textBlue500: () => "color: rgb(59 130 246);",
  textBlue600: () => "color: rgb(37 99 235);",
  textBlue700: () => "color: rgb(29 78 216);",
  textBlue800: () => "color: rgb(30 64 175);",
  textBlue900: () => "color: rgb(30 58 138);",
  textBlue950: () => "color: rgb(23 37 84);",
  textIndigo50: () => "color: rgb(238 242 255);",
  textIndigo100: () => "color: rgb(224 231 255);",
  textIndigo200: () => "color: rgb(199 210 254);",
  textIndigo300: () => "color: rgb(165 180 252);",
  textIndigo400: () => "color: rgb(129 140 248);",
  textIndigo500: () => "color: rgb(99 102 241);",
  textIndigo600: () => "color: rgb(79 70 229);",
  textIndigo700: () => "color: rgb(67 56 202);",
  textIndigo800: () => "color: rgb(55 48 163);",
  textIndigo900: () => "color: rgb(49 46 129);",
  textIndigo950: () => "color: rgb(30 27 75);",
  textViolet50: () => "color: rgb(245 243 255);",
  textViolet100: () => "color: rgb(237 233 254);",
  textViolet200: () => "color: rgb(221 214 254);",
  textViolet300: () => "color: rgb(196 181 253);",
  textViolet400: () => "color: rgb(167 139 250);",
  textViolet500: () => "color: rgb(139 92 246);",
  textViolet600: () => "color: rgb(124 58 237);",
  textViolet700: () => "color: rgb(109 40 217);",
  textViolet800: () => "color: rgb(91 33 182);",
  textViolet900: () => "color: rgb(76 29 149);",
  textViolet950: () => "color: rgb(46 16 101);",
  textPurple50: () => "color: rgb(250 245 255);",
  textPurple100: () => "color: rgb(243 232 255);",
  textPurple200: () => "color: rgb(233 213 255);",
  textPurple300: () => "color: rgb(216 180 254);",
  textPurple400: () => "color: rgb(192 132 252);",
  textPurple500: () => "color: rgb(168 85 247);",
  textPurple600: () => "color: rgb(147 51 234);",
  textPurple700: () => "color: rgb(126 34 206);",
  textPurple800: () => "color: rgb(107 33 168);",
  textPurple900: () => "color: rgb(88 28 135);",
  textPurple950: () => "color: rgb(59 7 100);",
  textFuchsia50: () => "color: rgb(253 244 255);",
  textFuchsia100: () => "color: rgb(250 232 255);",
  textFuchsia200: () => "color: rgb(245 208 254);",
  textFuchsia300: () => "color: rgb(240 171 252);",
  textFuchsia400: () => "color: rgb(232 121 249);",
  textFuchsia500: () => "color: rgb(217 70 239);",
  textFuchsia600: () => "color: rgb(192 38 211);",
  textFuchsia700: () => "color: rgb(162 28 175);",
  textFuchsia800: () => "color: rgb(134 25 143);",
  textFuchsia900: () => "color: rgb(112 26 117);",
  textFuchsia950: () => "color: rgb(74 4 78);",
  textPink50: () => "color: rgb(253 242 248);",
  textPink100: () => "color: rgb(252 231 243);",
  textPink200: () => "color: rgb(251 207 232);",
  textPink300: () => "color: rgb(249 168 212);",
  textPink400: () => "color: rgb(244 114 182);",
  textPink500: () => "color: rgb(236 72 153);",
  textPink600: () => "color: rgb(219 39 119);",
  textPink700: () => "color: rgb(190 24 93);",
  textPink800: () => "color: rgb(157 23 77);",
  textPink900: () => "color: rgb(131 24 67);",
  textPink950: () => "color: rgb(80 7 36);",
  textRose50: () => "color: rgb(255 241 242);",
  textRose100: () => "color: rgb(255 228 230);",
  textRose200: () => "color: rgb(254 205 211);",
  textRose300: () => "color: rgb(253 164 175);",
  textRose400: () => "color: rgb(251 113 133);",
  textRose500: () => "color: rgb(244 63 94);",
  textRose600: () => "color: rgb(225 29 72);",
  textRose700: () => "color: rgb(190 18 60);",
  textRose800: () => "color: rgb(159 18 57);",
  textRose900: () => "color: rgb(136 19 55);",
  textRose950: () => "color: rgb(76 5 25);",
  underline: () => "text-decoration-line: underline;",
  overline: () => "text-decoration-line: overline;",
  lineThrough: () => "text-decoration-line: line-through;",
  noUnderline: () => "text-decoration-line: none;",
  decorationSolid: () => "text-decoration-style: solid;",
  decorationDouble: () => "text-decoration-style: double;",
  decorationDotted: () => "text-decoration-style: dotted;",
  decorationDashed: () => "text-decoration-style: dashed;",
  decorationWavy: () => "text-decoration-style: wavy;",
  uppercase: () => "text-transform: uppercase;",
  lowercase: () => "text-transform: lowercase;",
  capitalize: () => "text-transform: capitalize;",
  normalCase: () => "text-transform: none;",
  truncate: () => "overflow: hidden;text-overflow: ellipsis;white-space: nowrap;",
  textEllipsis: () => "text-overflow: ellipsis;",
  textClip: () => "text-overflow: clip;",
  alignBaseline: () => "vertical-align: baseline;",
  alignTop: () => "vertical-align: top;",
  alignMiddle: () => "vertical-align: middle;",
  alignBottom: () => "vertical-align: bottom;",
  alignTextTop: () => "vertical-align: text-top;",
  alignTextBottom: () => "vertical-align: text-bottom;",
  alignSub: () => "vertical-align: sub;",
  alignSuper: () => "vertical-align: super;",
  whitespaceNormal: () => "white-space: normal;",
  whitespaceNowrap: () => "white-space: nowrap;",
  whitespacePre: () => "white-space: pre;",
  whitespacePreLine: () => "white-space: pre-line;",
  whitespacePreWrap: () => "white-space: pre-wrap;",
  whitespaceBreakSpaces: () => "white-space: break-spaces;",
  breakNormal: () => "overflow-wrap: normal;word-break: normal;",
  breakWords: () => "overflow-wrap: break-word;",
  breakAll: () => "word-break: break-all;",
  breakKeep: () => "word-break: keep-all;",
  hyphensNone: () => "hyphens: none;",
  hyphensManual: () => "hyphens: manual;",
  hyphensAuto: () => "hyphens: auto;",
  contentNone: () => "content: none;",
  /** @Backgrounds */
  bgFixed: () => "background-attachment: fixed;",
  bgLocal: () => "background-attachment: local;",
  bgScroll: () => "background-attachment: scroll;",
  bgClipBorder: () => "background-clip: border-box;",
  bgClipPadding: () => "background-clip: padding-box;",
  bgClipContent: () => "background-clip: content-box;",
  bgClipText: () => "background-clip: text;",
  bgInherit: () => "background-color: inherit;",
  bgCurrent: () => "background-color: currentColor;",
  bgTransparent: () => "background-color: transparent;",
  bgBlack: () => "background-color: rgb(0 0 0);",
  bgWhite: () => "background-color: rgb(255 255 255);",
  bgSlate50: () => "background-color: rgb(248 250 252);",
  bgSlate100: () => "background-color: rgb(241 245 249);",
  bgSlate200: () => "background-color: rgb(226 232 240);",
  bgSlate300: () => "background-color: rgb(203 213 225);",
  bgSlate400: () => "background-color: rgb(148 163 184);",
  bgSlate500: () => "background-color: rgb(100 116 139);",
  bgSlate600: () => "background-color: rgb(71 85 105);",
  bgSlate700: () => "background-color: rgb(51 65 85);",
  bgSlate800: () => "background-color: rgb(30 41 59);",
  bgSlate900: () => "background-color: rgb(15 23 42);",
  bgSlate950: () => "background-color: rgb(2 6 23);",
  bgGray50: () => "background-color: rgb(249 250 251);",
  bgGray100: () => "background-color: rgb(243 244 246);",
  bgGray200: () => "background-color: rgb(229 231 235);",
  bgGray300: () => "background-color: rgb(209 213 219);",
  bgGray400: () => "background-color: rgb(156 163 175);",
  bgGray500: () => "background-color: rgb(107 114 128);",
  bgGray600: () => "background-color: rgb(75 85 99);",
  bgGray700: () => "background-color: rgb(55 65 81);",
  bgGray800: () => "background-color: rgb(31 41 55);",
  bgGray900: () => "background-color: rgb(17 24 39);",
  bgGray950: () => "background-color: rgb(3 7 18);",
  bgZinc50: () => "background-color: rgb(250 250 250);",
  bgZinc100: () => "background-color: rgb(244 244 245);",
  bgZinc200: () => "background-color: rgb(228 228 231);",
  bgZinc300: () => "background-color: rgb(212 212 216);",
  bgZinc400: () => "background-color: rgb(161 161 170);",
  bgZinc500: () => "background-color: rgb(113 113 122);",
  bgZinc600: () => "background-color: rgb(82 82 91);",
  bgZinc700: () => "background-color: rgb(63 63 70);",
  bgZinc800: () => "background-color: rgb(39 39 42);",
  bgZinc900: () => "background-color: rgb(24 24 27);",
  bgZinc950: () => "background-color: rgb(9 9 11);",
  bgNeutral50: () => "background-color: rgb(250 250 250);",
  bgNeutral100: () => "background-color: rgb(245 245 245);",
  bgNeutral200: () => "background-color: rgb(229 229 229);",
  bgNeutral300: () => "background-color: rgb(212 212 212);",
  bgNeutral400: () => "background-color: rgb(163 163 163);",
  bgNeutral500: () => "background-color: rgb(115 115 115);",
  bgNeutral600: () => "background-color: rgb(82 82 82);",
  bgNeutral700: () => "background-color: rgb(64 64 64);",
  bgNeutral800: () => "background-color: rgb(38 38 38);",
  bgNeutral900: () => "background-color: rgb(23 23 23);",
  bgNeutral950: () => "background-color: rgb(10 10 10);",
  bgStone50: () => "background-color: rgb(250 250 249);",
  bgStone100: () => "background-color: rgb(245 245 244);",
  bgStone200: () => "background-color: rgb(231 229 228);",
  bgStone300: () => "background-color: rgb(214 211 209);",
  bgStone400: () => "background-color: rgb(168 162 158);",
  bgStone500: () => "background-color: rgb(120 113 108);",
  bgStone600: () => "background-color: rgb(87 83 78);",
  bgStone700: () => "background-color: rgb(68 64 60);",
  bgStone800: () => "background-color: rgb(41 37 36);",
  bgStone900: () => "background-color: rgb(28 25 23);",
  bgStone950: () => "background-color: rgb(12 10 9);",
  bgRed50: () => "background-color: rgb(254 242 242);",
  bgRed100: () => "background-color: rgb(254 226 226);",
  bgRed200: () => "background-color: rgb(254 202 202);",
  bgRed300: () => "background-color: rgb(252 165 165);",
  bgRed400: () => "background-color: rgb(248 113 113);",
  bgRed500: () => "background-color: rgb(239 68 68);",
  bgRed600: () => "background-color: rgb(220 38 38);",
  bgRed700: () => "background-color: rgb(185 28 28);",
  bgRed800: () => "background-color: rgb(153 27 27);",
  bgRed900: () => "background-color: rgb(127 29 29);",
  bgRed950: () => "background-color: rgb(69 10 10);",
  bgOrange50: () => "background-color: rgb(255 247 237);",
  bgOrange100: () => "background-color: rgb(255 237 213);",
  bgOrange200: () => "background-color: rgb(254 215 170);",
  bgOrange300: () => "background-color: rgb(253 186 116);",
  bgOrange400: () => "background-color: rgb(251 146 60);",
  bgOrange500: () => "background-color: rgb(249 115 22);",
  bgOrange600: () => "background-color: rgb(234 88 12);",
  bgOrange700: () => "background-color: rgb(194 65 12);",
  bgOrange800: () => "background-color: rgb(154 52 18);",
  bgOrange900: () => "background-color: rgb(124 45 18);",
  bgOrange950: () => "background-color: rgb(67 20 7);",
  bgAmber50: () => "background-color: rgb(255 251 235);",
  bgAmber100: () => "background-color: rgb(254 243 199);",
  bgAmber200: () => "background-color: rgb(253 230 138);",
  bgAmber300: () => "background-color: rgb(252 211 77);",
  bgAmber400: () => "background-color: rgb(251 191 36);",
  bgAmber500: () => "background-color: rgb(245 158 11);",
  bgAmber600: () => "background-color: rgb(217 119 6);",
  bgAmber700: () => "background-color: rgb(180 83 9);",
  bgAmber800: () => "background-color: rgb(146 64 14);",
  bgAmber900: () => "background-color: rgb(120 53 15);",
  bgAmber950: () => "background-color: rgb(69 26 3);",
  bgYellow50: () => "background-color: rgb(254 252 232);",
  bgYellow100: () => "background-color: rgb(254 249 195);",
  bgYellow200: () => "background-color: rgb(254 240 138);",
  bgYellow300: () => "background-color: rgb(253 224 71);",
  bgYellow400: () => "background-color: rgb(250 204 21);",
  bgYellow500: () => "background-color: rgb(234 179 8);",
  bgYellow600: () => "background-color: rgb(202 138 4);",
  bgYellow700: () => "background-color: rgb(161 98 7);",
  bgYellow800: () => "background-color: rgb(133 77 14);",
  bgYellow900: () => "background-color: rgb(113 63 18);",
  bgYellow950: () => "background-color: rgb(66 32 6);",
  bgLime50: () => "background-color: rgb(247 254 231);",
  bgLime100: () => "background-color: rgb(236 252 203);",
  bgLime200: () => "background-color: rgb(217 249 157);",
  bgLime300: () => "background-color: rgb(190 242 100);",
  bgLime400: () => "background-color: rgb(163 230 53);",
  bgLime500: () => "background-color: rgb(132 204 22);",
  bgLime600: () => "background-color: rgb(101 163 13);",
  bgLime700: () => "background-color: rgb(77 124 15);",
  bgLime800: () => "background-color: rgb(63 98 18);",
  bgLime900: () => "background-color: rgb(54 83 20);",
  bgLime950: () => "background-color: rgb(26 46 5);",
  bgGreen50: () => "background-color: rgb(240 253 244);",
  bgGreen100: () => "background-color: rgb(220 252 231);",
  bgGreen200: () => "background-color: rgb(187 247 208);",
  bgGreen300: () => "background-color: rgb(134 239 172);",
  bgGreen400: () => "background-color: rgb(74 222 128);",
  bgGreen500: () => "background-color: rgb(34 197 94);",
  bgGreen600: () => "background-color: rgb(22 163 74);",
  bgGreen700: () => "background-color: rgb(21 128 61);",
  bgGreen800: () => "background-color: rgb(22 101 52);",
  bgGreen900: () => "background-color: rgb(20 83 45);",
  bgGreen950: () => "background-color: rgb(5 46 22);",
  bgEmerald50: () => "background-color: rgb(236 253 245);",
  bgEmerald100: () => "background-color: rgb(209 250 229);",
  bgEmerald200: () => "background-color: rgb(167 243 208);",
  bgEmerald300: () => "background-color: rgb(110 231 183);",
  bgEmerald400: () => "background-color: rgb(52 211 153);",
  bgEmerald500: () => "background-color: rgb(16 185 129);",
  bgEmerald600: () => "background-color: rgb(5 150 105);",
  bgEmerald700: () => "background-color: rgb(4 120 87);",
  bgEmerald800: () => "background-color: rgb(6 95 70);",
  bgEmerald900: () => "background-color: rgb(6 78 59);",
  bgEmerald950: () => "background-color: rgb(2 44 34);",
  bgTeal50: () => "background-color: rgb(240 253 250);",
  bgTeal100: () => "background-color: rgb(204 251 241);",
  bgTeal200: () => "background-color: rgb(153 246 228);",
  bgTeal300: () => "background-color: rgb(94 234 212);",
  bgTeal400: () => "background-color: rgb(45 212 191);",
  bgTeal500: () => "background-color: rgb(20 184 166);",
  bgTeal600: () => "background-color: rgb(13 148 136);",
  bgTeal700: () => "background-color: rgb(15 118 110);",
  bgTeal800: () => "background-color: rgb(17 94 89);",
  bgTeal900: () => "background-color: rgb(19 78 74);",
  bgTeal950: () => "background-color: rgb(4 47 46);",
  bgCyan50: () => "background-color: rgb(236 254 255);",
  bgCyan100: () => "background-color: rgb(207 250 254);",
  bgCyan200: () => "background-color: rgb(165 243 252);",
  bgCyan300: () => "background-color: rgb(103 232 249);",
  bgCyan400: () => "background-color: rgb(34 211 238);",
  bgCyan500: () => "background-color: rgb(6 182 212);",
  bgCyan600: () => "background-color: rgb(8 145 178);",
  bgCyan700: () => "background-color: rgb(14 116 144);",
  bgCyan800: () => "background-color: rgb(21 94 117);",
  bgCyan900: () => "background-color: rgb(22 78 99);",
  bgCyan950: () => "background-color: rgb(8 51 68);",
  bgSky50: () => "background-color: rgb(240 249 255);",
  bgSky100: () => "background-color: rgb(224 242 254);",
  bgSky200: () => "background-color: rgb(186 230 253);",
  bgSky300: () => "background-color: rgb(125 211 252);",
  bgSky400: () => "background-color: rgb(56 189 248);",
  bgSky500: () => "background-color: rgb(14 165 233);",
  bgSky600: () => "background-color: rgb(2 132 199);",
  bgSky700: () => "background-color: rgb(3 105 161);",
  bgSky800: () => "background-color: rgb(7 89 133);",
  bgSky900: () => "background-color: rgb(12 74 110);",
  bgSky950: () => "background-color: rgb(8 47 73);",
  bgBlue50: () => "background-color: rgb(239 246 255);",
  bgBlue100: () => "background-color: rgb(219 234 254);",
  bgBlue200: () => "background-color: rgb(191 219 254);",
  bgBlue300: () => "background-color: rgb(147 197 253);",
  bgBlue400: () => "background-color: rgb(96 165 250);",
  bgBlue500: () => "background-color: rgb(59 130 246);",
  bgBlue600: () => "background-color: rgb(37 99 235);",
  bgBlue700: () => "background-color: rgb(29 78 216);",
  bgBlue800: () => "background-color: rgb(30 64 175);",
  bgBlue900: () => "background-color: rgb(30 58 138);",
  bgBlue950: () => "background-color: rgb(23 37 84);",
  bgIndigo50: () => "background-color: rgb(238 242 255);",
  bgIndigo100: () => "background-color: rgb(224 231 255);",
  bgIndigo200: () => "background-color: rgb(199 210 254);",
  bgIndigo300: () => "background-color: rgb(165 180 252);",
  bgIndigo400: () => "background-color: rgb(129 140 248);",
  bgIndigo500: () => "background-color: rgb(99 102 241);",
  bgIndigo600: () => "background-color: rgb(79 70 229);",
  bgIndigo700: () => "background-color: rgb(67 56 202);",
  bgIndigo800: () => "background-color: rgb(55 48 163);",
  bgIndigo900: () => "background-color: rgb(49 46 129);",
  bgIndigo950: () => "background-color: rgb(30 27 75);",
  bgViolet50: () => "background-color: rgb(245 243 255);",
  bgViolet100: () => "background-color: rgb(237 233 254);",
  bgViolet200: () => "background-color: rgb(221 214 254);",
  bgViolet300: () => "background-color: rgb(196 181 253);",
  bgViolet400: () => "background-color: rgb(167 139 250);",
  bgViolet500: () => "background-color: rgb(139 92 246);",
  bgViolet600: () => "background-color: rgb(124 58 237);",
  bgViolet700: () => "background-color: rgb(109 40 217);",
  bgViolet800: () => "background-color: rgb(91 33 182);",
  bgViolet900: () => "background-color: rgb(76 29 149);",
  bgViolet950: () => "background-color: rgb(46 16 101);",
  bgPurple50: () => "background-color: rgb(250 245 255);",
  bgPurple100: () => "background-color: rgb(243 232 255);",
  bgPurple200: () => "background-color: rgb(233 213 255);",
  bgPurple300: () => "background-color: rgb(216 180 254);",
  bgPurple400: () => "background-color: rgb(192 132 252);",
  bgPurple500: () => "background-color: rgb(168 85 247);",
  bgPurple600: () => "background-color: rgb(147 51 234);",
  bgPurple700: () => "background-color: rgb(126 34 206);",
  bgPurple800: () => "background-color: rgb(107 33 168);",
  bgPurple900: () => "background-color: rgb(88 28 135);",
  bgPurple950: () => "background-color: rgb(59 7 100);",
  bgFuchsia50: () => "background-color: rgb(253 244 255);",
  bgFuchsia100: () => "background-color: rgb(250 232 255);",
  bgFuchsia200: () => "background-color: rgb(245 208 254);",
  bgFuchsia300: () => "background-color: rgb(240 171 252);",
  bgFuchsia400: () => "background-color: rgb(232 121 249);",
  bgFuchsia500: () => "background-color: rgb(217 70 239);",
  bgFuchsia600: () => "background-color: rgb(192 38 211);",
  bgFuchsia700: () => "background-color: rgb(162 28 175);",
  bgFuchsia800: () => "background-color: rgb(134 25 143);",
  bgFuchsia900: () => "background-color: rgb(112 26 117);",
  bgFuchsia950: () => "background-color: rgb(74 4 78);",
  bgPink50: () => "background-color: rgb(253 242 248);",
  bgPink100: () => "background-color: rgb(252 231 243);",
  bgPink200: () => "background-color: rgb(251 207 232);",
  bgPink300: () => "background-color: rgb(249 168 212);",
  bgPink400: () => "background-color: rgb(244 114 182);",
  bgPink500: () => "background-color: rgb(236 72 153);",
  bgPink600: () => "background-color: rgb(219 39 119);",
  bgPink700: () => "background-color: rgb(190 24 93);",
  bgPink800: () => "background-color: rgb(157 23 77);",
  bgPink900: () => "background-color: rgb(131 24 67);",
  bgPink950: () => "background-color: rgb(80 7 36);",
  bgRose50: () => "background-color: rgb(255 241 242);",
  bgRose100: () => "background-color: rgb(255 228 230);",
  bgRose200: () => "background-color: rgb(254 205 211);",
  bgRose300: () => "background-color: rgb(253 164 175);",
  bgRose400: () => "background-color: rgb(251 113 133);",
  bgRose500: () => "background-color: rgb(244 63 94);",
  bgRose600: () => "background-color: rgb(225 29 72);",
  bgRose700: () => "background-color: rgb(190 18 60);",
  bgRose800: () => "background-color: rgb(159 18 57);",
  bgRose900: () => "background-color: rgb(136 19 55);",
  bgRose950: () => "background-color: rgb(76 5 25);",
  bgOriginBorder: () => "background-origin: border-box;",
  bgOriginPadding: () => "background-origin: padding-box;",
  bgOriginContent: () => "background-origin: content-box;",
  bgBottom: () => "background-position: bottom;",
  bgCenter: () => "background-position: center;",
  bgLeft: () => "background-position: left;",
  bgLeftBottom: () => "background-position: left bottom;",
  bgLeftTop: () => "background-position: left top;",
  bgRight: () => "background-position: right;",
  bgRightBottom: () => "background-position: right bottom;",
  bgRightTop: () => "background-position: right top;",
  bgTop: () => "background-position: top;",
  bgRepeat: () => "background-repeat: repeat;",
  bgNoRepeat: () => "background-repeat: no-repeat;",
  bgRepeatX: () => "background-repeat: repeat-x;",
  bgRepeatY: () => "background-repeat: repeat-y;",
  bgRepeatRound: () => "background-repeat: round;",
  bgRepeatSpace: () => "background-repeat: space;",
  bgAuto: () => "background-size: auto;",
  bgCover: () => "background-size: cover;",
  bgContain: () => "background-size: contain;",
  /** @Borders */
  borderSolid: () => "border-style: solid;",
  borderDashed: () => "border-style: dashed;",
  borderDotted: () => "border-style: dotted;",
  borderDouble: () => "border-style: double;",
  borderHidden: () => "border-style: hidden;",
  borderNone: () => "border-style: none;",
  divideSolid: () => "border-style: solid;",
  divideDashed: () => "border-style: dashed;",
  divideDotted: () => "border-style: dotted;",
  divideDouble: () => "border-style: double;",
  divideNone: () => "border-style: none;",
  outlineNone: () => "outline: 2px solid transparent;outline-offset: 2px;",
  outline: () => "outline-style: solid;",
  outlineDashed: () => "outline-style: dashed;",
  outlineDotted: () => "outline-style: dotted;",
  outlineDouble: () => "outline-style: double;",
  /** @Effects */
  shadowSm: () => "box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);",
  shadow: () => "box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);",
  shadowMd: () => "box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
  shadowLg: () => "box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);",
  shadowXl: () => "box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);",
  shadow2xl: () => "box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);",
  shadowInner: () => "box-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);",
  shadowNone: () => "box-shadow: 0 0 #0000;",
  mixBlendNormal: () => "mix-blend-mode: normal;",
  mixBlendMultiply: () => "mix-blend-mode: multiply;",
  mixBlendScreen: () => "mix-blend-mode: screen;",
  mixBlendOverlay: () => "mix-blend-mode: overlay;",
  mixBlendDarken: () => "mix-blend-mode: darken;",
  mixBlendLighten: () => "mix-blend-mode: lighten;",
  mixBlendColorDodge: () => "mix-blend-mode: color-dodge;",
  mixBlendColorBurn: () => "mix-blend-mode: color-burn;",
  mixBlendHardLight: () => "mix-blend-mode: hard-light;",
  mixBlendSoftLight: () => "mix-blend-mode: soft-light;",
  mixBlendDifference: () => "mix-blend-mode: difference;",
  mixBlendExclusion: () => "mix-blend-mode: exclusion;",
  mixBlendHue: () => "mix-blend-mode: hue;",
  mixBlendSaturation: () => "mix-blend-mode: saturation;",
  mixBlendColor: () => "mix-blend-mode: color;",
  mixBlendLuminosity: () => "mix-blend-mode: luminosity;",
  mixBlendPlusLighter: () => "mix-blend-mode: plus-lighter;",
  bgBlendNormal: () => "background-blend-mode: normal;",
  bgBlendMultiply: () => "background-blend-mode: multiply;",
  bgBlendScreen: () => "background-blend-mode: screen;",
  bgBlendOverlay: () => "background-blend-mode: overlay;",
  bgBlendDarken: () => "background-blend-mode: darken;",
  bgBlendLighten: () => "background-blend-mode: lighten;",
  bgBlendColorDodge: () => "background-blend-mode: color-dodge;",
  bgBlendColorBurn: () => "background-blend-mode: color-burn;",
  bgBlendHardLight: () => "background-blend-mode: hard-light;",
  bgBlendSoftLight: () => "background-blend-mode: soft-light;",
  bgBlendDifference: () => "background-blend-mode: difference;",
  bgBlendExclusion: () => "background-blend-mode: exclusion;",
  bgBlendHue: () => "background-blend-mode: hue;",
  bgBlendSaturation: () => "background-blend-mode: saturation;",
  bgBlendColor: () => "background-blend-mode: color;",
  bgBlendLuminosity: () => "background-blend-mode: luminosity;",
  /** @Filters */
  blurNone: () => "filter: blur(0);",
  blurSm: () => "filter: blur(4px);",
  blur: () => "filter: blur(8px);",
  blurMd: () => "filter: blur(12px);",
  blurLg: () => "filter: blur(16px);",
  blurXl: () => "filter: blur(24px);",
  blur2xl: () => "filter: blur(40px);",
  blur3xl: () => "filter: blur(64px);",
  dropShadowSm: () => "filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));",
  dropShadow: () => "filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));",
  dropShadowMd: () => "filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));",
  dropShadowLg: () => "filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));",
  dropShadowXl: () => "filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));",
  dropShadow2xl: () => "filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));",
  dropShadowNone: () => "filter: drop-shadow(0 0 #0000);",
  brightness0: () => "filter: brightness(0);",
  brightness50: () => "filter: brightness(.5);",
  brightness75: () => "filter: brightness(.75);",
  brightness90: () => "filter: brightness(.9);",
  brightness95: () => "filter: brightness(.95);",
  brightness100: () => "filter: brightness(1);",
  brightness105: () => "filter: brightness(1.05);",
  brightness110: () => "filter: brightness(1.1);",
  brightness125: () => "filter: brightness(1.25);",
  brightness150: () => "filter: brightness(1.5);",
  brightness200: () => "filter: brightness(2);",
  contrast0: () => "filter: contrast(0);",
  contrast50: () => "filter: contrast(.5);",
  contrast75: () => "filter: contrast(.75);",
  contrast100: () => "filter: contrast(1);",
  contrast125: () => "filter: contrast(1.25);",
  contrast150: () => "filter: contrast(1.5);",
  contrast200: () => "filter: contrast(2);",
  grayscale0: () => "filter: grayscale(0);",
  grayscale: () => "filter: grayscale(100%);",
  hueRotate0: () => "filter: hue-rotate(0deg);",
  hueRotate15: () => "filter: hue-rotate(15deg);",
  hueRotate30: () => "filter: hue-rotate(30deg);",
  hueRotate60: () => "filter: hue-rotate(60deg);",
  hueRotate90: () => "filter: hue-rotate(90deg);",
  hueRotate180: () => "filter: hue-rotate(180deg);",
  invert0: () => "filter: invert(0);",
  invert: () => "filter: invert(100%);",
  saturate0: () => "filter: saturate(0);",
  saturate50: () => "filter: saturate(.5);",
  saturate100: () => "filter: saturate(1);",
  saturate150: () => "filter: saturate(1.5);",
  saturate200: () => "filter: saturate(2);",
  sepia0: () => "filter: sepia(0);",
  sepia: () => "filter: sepia(100%);",
  backdropBlurNone: () => "backdrop-filter: blur(0);",
  backdropBlurSm: () => "backdrop-filter: blur(4px);",
  backdropBlur: () => "backdrop-filter: blur(8px);",
  backdropBlurMd: () => "backdrop-filter: blur(12px);",
  backdropBlurLg: () => "backdrop-filter: blur(16px);",
  backdropBlurXl: () => "backdrop-filter: blur(24px);",
  backdropBlur2xl: () => "backdrop-filter: blur(40px);",
  backdropBlur3xl: () => "backdrop-filter: blur(64px);",
  backdropBrightness0: () => "backdrop-filter: brightness(0);",
  backdropBrightness50: () => "backdrop-filter: brightness(.5);",
  backdropBrightness75: () => "backdrop-filter: brightness(.75);",
  backdropBrightness90: () => "backdrop-filter: brightness(.9);",
  backdropBrightness95: () => "backdrop-filter: brightness(.95);",
  backdropBrightness100: () => "backdrop-filter: brightness(1);",
  backdropBrightness105: () => "backdrop-filter: brightness(1.05);",
  backdropBrightness110: () => "backdrop-filter: brightness(1.1);",
  backdropBrightness125: () => "backdrop-filter: brightness(1.25);",
  backdropBrightness150: () => "backdrop-filter: brightness(1.5);",
  backdropBrightness200: () => "backdrop-filter: brightness(2);",
  backdropContrast0: () => "backdrop-filter: contrast(0);",
  backdropContrast50: () => "backdrop-filter: contrast(.5);",
  backdropContrast75: () => "backdrop-filter: contrast(.75);",
  backdropContrast100: () => "backdrop-filter: contrast(1);",
  backdropContrast125: () => "backdrop-filter: contrast(1.25);",
  backdropContrast150: () => "backdrop-filter: contrast(1.5);",
  backdropContrast200: () => "backdrop-filter: contrast(2);",
  backdropGrayscale0: () => "backdrop-filter: grayscale(0);",
  backdropGrayscale: () => "backdrop-filter: grayscale(100%);",
  backdropHueRotate0: () => "backdrop-filter: hue-rotate(0deg);",
  backdropHueRotate15: () => "backdrop-filter: hue-rotate(15deg);",
  backdropHueRotate30: () => "backdrop-filter: hue-rotate(30deg);",
  backdropHueRotate60: () => "backdrop-filter: hue-rotate(60deg);",
  backdropHueRotate90: () => "backdrop-filter: hue-rotate(90deg);",
  backdropHueRotate180: () => "backdrop-filter: hue-rotate(180deg);",
  backdropInvert0: () => "backdrop-filter: invert(0);",
  backdropInvert: () => "backdrop-filter: invert(100%);",
  backdropOpacity0: () => "backdrop-filter: opacity(0);",
  backdropOpacity5: () => "backdrop-filter: opacity(0.05);",
  backdropOpacity10: () => "backdrop-filter: opacity(0.1);",
  backdropOpacity20: () => "backdrop-filter: opacity(0.2);",
  backdropOpacity25: () => "backdrop-filter: opacity(0.25);",
  backdropOpacity30: () => "backdrop-filter: opacity(0.3);",
  backdropOpacity40: () => "backdrop-filter: opacity(0.4);",
  backdropOpacity50: () => "backdrop-filter: opacity(0.5);",
  backdropOpacity60: () => "backdrop-filter: opacity(0.6);",
  backdropOpacity70: () => "backdrop-filter: opacity(0.7);",
  backdropOpacity75: () => "backdrop-filter: opacity(0.75);",
  backdropOpacity80: () => "backdrop-filter: opacity(0.8);",
  backdropOpacity90: () => "backdrop-filter: opacity(0.9);",
  backdropOpacity95: () => "backdrop-filter: opacity(0.95);",
  backdropOpacity100: () => "backdrop-filter: opacity(1);",
  backdropSaturate0: () => "backdrop-filter: saturate(0);",
  backdropSaturate50: () => "backdrop-filter: saturate(.5);",
  backdropSaturate100: () => "backdrop-filter: saturate(1);",
  backdropSaturate150: () => "backdrop-filter: saturate(1.5);",
  backdropSaturate200: () => "backdrop-filter: saturate(2);",
  backdropSepia0: () => "backdrop-filter: sepia(0);",
  backdropSepia: () => "backdrop-filter: sepia(100%);",
  /** @Tables */
  borderCollapse: () => "border-collapse: collapse;",
  borderSeparate: () => "border-collapse: separate;",
  tableAuto: () => "table-layout: auto;",
  tableFixed: () => "table-layout: fixed;",
  captionTop: () => "caption-side: top;",
  captionBottom: () => "caption-side: bottom;",
  /** @Transitions_Animation */
  transitionNone: () => "transition-property: none;",
  transitionAll: () => "transition-property: all;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-duration: 150ms;",
  transition: () => "transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-duration: 150ms;",
  transitionColors: () => "transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-duration: 150ms;",
  transitionOpacity: () => "transition-property: opacity;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-duration: 150ms;",
  transitionShadow: () => "transition-property: box-shadow;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-duration: 150ms;",
  transitionTransform: () => "transition-property: transform;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-duration: 150ms;",
  easeLinear: () => "transition-timing-function: linear;",
  easeIn: () => "transition-timing-function: cubic-bezier(0.4, 0, 1, 1);",
  easeOut: () => "transition-timing-function: cubic-bezier(0, 0, 0.2, 1);",
  easeInOut: () => "transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);",
  animateNone: () => "animation: none;",
  animateSpin: () => "animation: spin 1s linear infinite;@keyframes spin {  from {    transform: rotate(0deg);  }  to {    transform: rotate(360deg);  }}",
  animatePing: () => "animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;@keyframes ping {  75%, 100% {    transform: scale(2);    opacity: 0;  }}",
  animatePulse: () => "animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;@keyframes pulse {  0%, 100% {    opacity: 1;  }  50% {    opacity: .5;  }}",
  animateBounce: () => "animation: bounce 1s infinite;@keyframes bounce {  0%, 100% {    transform: translateY(-25%);    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);  }  50% {    transform: translateY(0);    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);  }}",
  /** @Transforms */
  originCenter: () => "transform-origin: center;",
  originTop: () => "transform-origin: top;",
  originTopRight: () => "transform-origin: top right;",
  originRight: () => "transform-origin: right;",
  originBottomRight: () => "transform-origin: bottom right;",
  originBottom: () => "transform-origin: bottom;",
  originBottomLeft: () => "transform-origin: bottom left;",
  originLeft: () => "transform-origin: left;",
  originTopLeft: () => "transform-origin: top left;",
  appearanceNone: () => "appearance: none;",
  /** @Interactivity */
  cursorAuto: () => "cursor: auto;",
  cursorDefault: () => "cursor: default;",
  cursorPointer: () => "cursor: pointer;",
  cursorWait: () => "cursor: wait;",
  cursorText: () => "cursor: text;",
  cursorMove: () => "cursor: move;",
  cursorHelp: () => "cursor: help;",
  cursorNotAllowed: () => "cursor: not-allowed;",
  cursorNone: () => "cursor: none;",
  cursorContextMenu: () => "cursor: context-menu;",
  cursorProgress: () => "cursor: progress;",
  cursorCell: () => "cursor: cell;",
  cursorCrosshair: () => "cursor: crosshair;",
  cursorVerticalText: () => "cursor: vertical-text;",
  cursorAlias: () => "cursor: alias;",
  cursorCopy: () => "cursor: copy;",
  cursorNoDrop: () => "cursor: no-drop;",
  cursorGrab: () => "cursor: grab;",
  cursorGrabbing: () => "cursor: grabbing;",
  cursorAllScroll: () => "cursor: all-scroll;",
  cursorColResize: () => "cursor: col-resize;",
  cursorRowResize: () => "cursor: row-resize;",
  cursorNResize: () => "cursor: n-resize;",
  cursorEResize: () => "cursor: e-resize;",
  cursorSResize: () => "cursor: s-resize;",
  cursorWResize: () => "cursor: w-resize;",
  cursorNeResize: () => "cursor: ne-resize;",
  cursorNwResize: () => "cursor: nw-resize;",
  cursorSeResize: () => "cursor: se-resize;",
  cursorSwResize: () => "cursor: sw-resize;",
  cursorEwResize: () => "cursor: ew-resize;",
  cursorNsResize: () => "cursor: ns-resize;",
  cursorNeswResize: () => "cursor: nesw-resize;",
  cursorNwseResize: () => "cursor: nwse-resize;",
  cursorZoomIn: () => "cursor: zoom-in;",
  cursorZoomOut: () => "cursor: zoom-out;",
  pointerEventsNone: () => "pointer-events: none;",
  pointerEventsAuto: () => "pointer-events: auto;",
  resizeNone: () => "resize: none;",
  resizeY: () => "resize: vertical;",
  resizeX: () => "resize: horizontal;",
  resize: () => "resize: both;",
  scrollAuto: () => "scroll-behavior: auto;",
  scrollSmooth: () => "scroll-behavior: smooth;",
  snapStart: () => "scroll-snap-align: start;",
  snapEnd: () => "scroll-snap-align: end;",
  snapCenter: () => "scroll-snap-align: center;",
  snapAlignNone: () => "scroll-snap-align: none;",
  snapNormal: () => "scroll-snap-stop: normal;",
  snapAlways: () => "scroll-snap-stop: always;",
  touchAuto: () => "touch-action: auto;",
  touchNone: () => "touch-action: none;",
  touchPanX: () => "touch-action: pan-x;",
  touchPanLeft: () => "touch-action: pan-left;",
  touchPanRight: () => "touch-action: pan-right;",
  touchPanY: () => "touch-action: pan-y;",
  touchPanUp: () => "touch-action: pan-up;",
  touchPanDown: () => "touch-action: pan-down;",
  touchPinchZoom: () => "touch-action: pinch-zoom;",
  touchManipulation: () => "touch-action: manipulation;",
  selectNone: () => "user-select: none;",
  selectText: () => "user-select: text;",
  selectAll: () => "user-select: all;",
  selectAuto: () => "user-select: auto;",
  /** @Accessibility */
  srOnly: () => "position: absolute;width: 1px;height: 1px;padding: 0;margin: -1px;overflow: hidden;clip: rect(0, 0, 0, 0);white-space: nowrap;border-width: 0;",
  notSrOnly: () => "position: static;width: auto;height: auto;padding: 0;margin: 0;overflow: visible;clip: auto;white-space: normal;"
}

let a = "// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport type Utility = {\n"
for (const key in utility) {
  a += ("" +
  "  /**\n" +
  "   * ```\n" +
  `   * .${toHyphenatedCase(key)} {\n` +
  utility[key]().split(";").filter(Boolean).map(i => `   *   ${i};\n`).join("") +
  "   * }\n" +
  "   * ```\n" +
  "   */\n" +
  `  ${key}: () => string\n`
  )
}
a += "}\n"
fs.writeFileSync("./src/utility.type.ts", a)

for (const key in utility) {
  console.log(`export const ${key} = utility.${key}`)
}
